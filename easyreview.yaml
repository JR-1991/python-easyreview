openapi: 3.0.3
info:
  title: EasyReview API
  version: 0.0.1
  description: Backend used for the EasyReview app to manage reviews.
paths:
  /api/dataset/fetch/:
    post:
      operationId: fetchDatasetFromDOI
      parameters:
      - in: query
        name: api_token
        schema:
          type: string
        description: API Token to access hidden datasets.
      - in: query
        name: doi
        schema:
          type: string
        description: DOI of the dataset
        required: true
      - in: query
        name: site_url
        schema:
          type: string
        description: URL to the dataset
        required: true
      tags:
      - dataset
      security:
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/field/{id}/:
    get:
      operationId: getFieldByID
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - field
      security:
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Field'
          description: ''
  /api/field/update/{id}/:
    put:
      operationId: updateField
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - field
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Field'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Field'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Field'
        required: true
      security:
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/reviewers/{id}/:
    get:
      operationId: getReviewerById
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - reviewers
      security:
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reviewer'
          description: ''
  /api/reviewers/add/:
    post:
      operationId: getReviewer
      tags:
      - reviewers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reviewer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reviewer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reviewer'
        required: true
      security:
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/reviewers/list/:
    get:
      operationId: getReviewers
      tags:
      - reviewers
      security:
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/reviews/{id}/:
    get:
      operationId: getReviewByID
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - reviews
      security:
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /api/reviews/add/:
    post:
      operationId: addReview
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/reviews/delete/{id}/:
    delete:
      operationId: deleteReview
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - reviews
      security:
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/reviews/doi/{doi}/:
    get:
      operationId: getReviewsByDatasetDOI
      parameters:
      - in: path
        name: doi
        schema:
          type: string
        required: true
      tags:
      - reviews
      security:
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /api/reviews/list/:
    get:
      operationId: getReviews
      tags:
      - reviews
      security:
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/reviews/reviewer/{reviewerid}/:
    get:
      operationId: getReviewsByReviewer
      parameters:
      - in: path
        name: reviewerid
        schema:
          type: string
        required: true
      tags:
      - reviews
      security:
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /api/reviews/stats/{id}/:
    get:
      operationId: getFieldCount
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - reviews
      security:
      - basicAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    Compound:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        primitives:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        accepted:
          type: boolean
        chat:
          type: object
          additionalProperties: {}
        field_type:
          type: string
          readOnly: true
        metadatablock:
          type: string
          format: uuid
      required:
      - field_type
      - id
      - metadatablock
      - name
      - primitives
    Field:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        accepted:
          type: boolean
          nullable: true
        chat:
          type: object
          additionalProperties: {}
        value:
          type: string
        history:
          type: object
          additionalProperties: {}
        field_type:
          type: string
          readOnly: true
        metadatablock:
          type: string
          format: uuid
          nullable: true
        compound:
          type: string
          format: uuid
          nullable: true
      required:
      - field_type
      - id
      - name
      - value
    Metadatablock:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        primitives:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
        compounds:
          type: array
          items:
            $ref: '#/components/schemas/Compound'
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        review:
          type: string
          format: uuid
      required:
      - compounds
      - id
      - name
      - primitives
      - review
    Review:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        metadatablocks:
          type: array
          items:
            $ref: '#/components/schemas/Metadatablock'
          readOnly: true
        doi:
          type: string
          maxLength: 100
        site_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        revision:
          type: integer
          maximum: 32767
          minimum: 0
        accepted:
          type: boolean
        date:
          type: string
          format: date-time
        reviewer:
          type: integer
          nullable: true
      required:
      - id
      - metadatablocks
      - revision
    Reviewer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 100
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        affiliation:
          type: string
          maxLength: 100
      required:
      - email
      - first_name
      - id
      - last_name
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
